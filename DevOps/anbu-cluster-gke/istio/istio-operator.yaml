---
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  namespace: istio-system
  name: virgo-anbu
spec:
  profile: default
  components:
    pilot:
      k8s:
        podAnnotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        hpaSpec:
          minReplicas: 2
          maxReplicas: 5
          metrics:
            - resource:
                name: cpu
                targetAverageUtilization: 80
              type: Resource
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istiod
        podDisruptionBudget:
          minAvailable: 1
          selector:
            matchLabels:
              app: istiod
              istio: istiod
        resources:
          requests:
            memory: 200Mi
            cpu: 100m
    ingressGateways:
      - name: istio-ingressgateway
        enabled: true
        namespace: istio-system
        label:
          app: istio-ingressgateway
          istio: istio-ingressgateway
        k8s:
          podAnnotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          replicaCount: 2
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm: 
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - istio-ingressgateway
                    topologyKey: topology.kubernetes.io/zone
                  weight: 50
          hpaSpec:
            minReplicas: 3
            maxReplicas: 5
            metrics:
              - resource:
                  name: cpu
                  targetAverageUtilization: 80
                type: Resource
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-ingressgateway
          podDisruptionBudget:
            minAvailable: 2
            selector:
              matchLabels:
                app: istio-ingressgateway
                istio: istio-ingressgateway
          resources:
            requests:
              cpu: 128m
              memory: 512Mi
            limits:
              cpu: 256m
              memory: 1024Mi
          serviceAnnotations:
            cloud.google.com/load-balancer-type: "Internal"
            networking.gke.io/internal-load-balancer-allow-global-access: "true"
          service:
            loadBalancerIP: "172.31.251.22"
            ports:
              - name: http2
                port: 80
              - name: https
                port: 443
      - name: istio-ingressgateway-web
        enabled: true
        namespace: istio-system
        label:
          app: istio-ingressgateway-web
          istio: istio-ingressgateway-web
        k8s:
          podAnnotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          replicaCount: 2
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm: 
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - istio-ingressgateway-web
                    topologyKey: topology.kubernetes.io/zone
                  weight: 50
          hpaSpec:
            minReplicas: 3
            maxReplicas: 5
            metrics:
              - resource:
                  name: cpu
                  targetAverageUtilization: 80
                type: Resource
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-ingressgateway-web
          podDisruptionBudget:
            minAvailable: 2
            selector:
              matchLabels:
                app: istio-ingressgateway-web
                istio: istio-ingressgateway-web
          resources:
            requests:
              cpu: 128m
              memory: 512Mi
            limits:
              cpu: 256m
              memory: 1024Mi
          serviceAnnotations:
            cloud.google.com/load-balancer-type: "Internal"
            networking.gke.io/internal-load-balancer-allow-global-access: "true"
          service:
            loadBalancerIP: "172.31.251.23"
            ports:
              - name: http2
                port: 80
              - name: https
                port: 443
      - name: istio-ingressgateway-tool
        enabled: true
        namespace: istio-system
        label:
          app: istio-ingressgateway-tool
          istio: istio-ingressgateway-tool
        k8s:
          podAnnotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          replicaCount: 1
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
          hpaSpec:
            minReplicas: 2
            maxReplicas: 5
            metrics:
              - resource:
                  name: cpu
                  targetAverageUtilization: 80
                type: Resource
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-ingressgateway-tool
          podDisruptionBudget:
            minAvailable: 1
            selector:
              matchLabels:
                app: istio-ingressgateway-tool
                istio: istio-ingressgateway-tool
          resources:
            requests:
              cpu: 128m
              memory: 512Mi
            limits:
              cpu: 256m
              memory: 1024Mi
          serviceAnnotations:
            cloud.google.com/load-balancer-type: "Internal"
            networking.gke.io/internal-load-balancer-allow-global-access: "true"
          service:
            loadBalancerIP: "172.31.251.24"
            ports:
              - name: http2
                port: 80
              - name: https
                port: 443
      - name: istio-ingressgateway-auth
        enabled: true
        namespace: istio-system
        label:
          app: istio-ingressgateway-auth
          istio: istio-ingressgateway-auth
        k8s:
          podAnnotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          replicaCount: 2
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm: 
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - istio-ingressgateway-auth
                    topologyKey: topology.kubernetes.io/zone
                  weight: 50
          hpaSpec:
            minReplicas: 3
            maxReplicas: 5
            metrics:
              - resource:
                  name: cpu
                  targetAverageUtilization: 80
                type: Resource
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-ingressgateway-auth
          podDisruptionBudget:
            minAvailable: 2
            selector:
              matchLabels:
                app: istio-ingressgateway-auth
                istio: istio-ingressgateway-auth
          resources:
            requests:
              cpu: 128m
              memory: 512Mi
            limits:
              cpu: 256m
              memory: 1024Mi
          serviceAnnotations:
            cloud.google.com/load-balancer-type: "Internal"
            networking.gke.io/internal-load-balancer-allow-global-access: "true"
          service:
            loadBalancerIP: "172.31.251.25"
            ports:
              - name: http2
                port: 80
              - name: https
                port: 443
  meshConfig:
    defaultConfig:
      holdApplicationUntilProxyStarts: true
  values:
    gateways:
      istio-ingressgateway:
        runAsRoot: true
    global:
      proxy:
        tracer: datadog
        resources:
          requests:
            cpu: 35m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 128Mi
    pilot:
      traceSampling: 25.0
...

